#!/bin/bash

echo "╔══════════════════════════════════════════════════════════════════════╗"
echo "║  This program will download and install the latest Proton-GE-Custom  ║"
echo "║  Refer to github.com/GloriousEggroll/proton-ge-custom for more info  ║"
echo "╚══════════════════════════════════════════════════════════════════════╝"

# Get the latest Proton-GE-Custom release (url and filename)
url="$(curl -s https://api.github.com/repos/GloriousEggroll/proton-ge-custom/releases/latest | grep browser_download_url | cut -d '"' -f 4)"
filename="$(echo $url | sed 's|.*/||')"

echo "url = $url"
echo "filename = $filename"

# Check if steam is properly installed
if [ -d "/home/$(whoami)/.local/share/Steam" ]; then
    cd "/home/$(whoami)/.local/share/Steam"
    # Check if compatibilitytools.d folder exists, if not create one
    if [ ! -d "compatibilitytools.d" ]; then
        echo "--> Creating folder for Steam compatibility tools..."
        mkdir "compatibilitytools.d"
    fi
    cd "compatibilitytools.d"
    # Check if current release is already installed
    if [ -d $(echo $filename | sed 's|\.tar\.gz||') ]; then
        echo "--> Current version is already installed. Exiting..."
        exit 1
    else
        # Download latest release, extract the files and delete the archive
        # TODO check if VirtualBox and its kernel modules are installed and enabled at boot.
        # TODO check if vagrant is installed

        if [ $1 == "--compile" ]; then
            echo "--> Cloning the repository at http://github.com/gloriouseggroll/proton-ge-custom"
            # git clone --recurse-submodules http://github.com/gloriouseggroll/proton-ge-custom &> /dev/null
            
            # Adding custom patches?
            echo "--> Would you like to add custom patches? (y/n)"
            read input
            
            if [ ${input:0:1} == "y" ] || [ ${input:0:1} == "Y" ]; then
                echo "--> Please add your custom patches, edit the file, and rerun the script."
                echo "--> The patches need to be added to $pwd/scripts"
                exit
            fi

            # apply all patches in the patches/ directory, saving the output in a file.
            echo "--> Applying patches..."
            # exec ./patches/protonprep.sh &> patchlog.txt

            # check for errors in the patches
            echo "--> Checking for errors during patch application..."
            error_count=$(expr $(grep -ic fail patchlog.txt) + $(grep -ic error patchlog.txt))
            echo "--> Errors found: $error_count"


            # exit the program if there are errors. 
            if [ $error_count > 0 ]; then
                echo "--> There were errors during patch application. Exiting..."
                exit
            fi
           
            # ask for a name for the build
            echo "What would you like to name your build?"
            print ">"
            read build_name




            # launching vagrant
            vagrant up
        





        else
            echo "--> Downloading $filename..."
            curl -sL "$url" --output "$filename"
            echo "--> Extracting $filename..."
            tar -xf "$filename"
            echo "--> Removing the compressed archive..."
            rm "$filename"
            echo "--> Done. Please check the command line for errors and restart Steam for the changes to take effect."
        fi
    fi
else
    echo "--> Steam does not seem to be installed. Please make sure everything is installed properly."
    exit 1
fi
